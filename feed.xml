<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>岛主</title>
    <link>http://localhost:4000</link>
    <atom:link href="http://localhost:4000/feed.xml" rel="self" type="application/rss+xml" />
    
      <item>
        <title>从 Vue 1.x 迁移</title>
        <description>&lt;p&gt;#FAQ&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;哇，非常长的一页！是否意味着 Vue 2.0 已经完全不同了呢，是否需要从头学起呢，Vue 1.0 的项目是不是没法迁移了？&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;非常开心地告诉你，并不是！几乎 90% 的 API 和核心概念都没有变。因为本节包含了很多详尽的阐述以及许多迁移的例子，所以显得有点长。不用担心，你不必从头到尾把本节读一遍！&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;我该从哪里开始项目迁移呢？&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ol&gt;
  &lt;li&gt;首先，在当前项目下运行迁移工具。我们非常谨慎地把高级 Vue 升级过程简化为使用一个简单的命令行工具。当工具识别出旧有的特性后，就会告知你并给出建议，同时附上关于详细信息的链接。&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;2.然后，浏览本页面的侧边栏列出的内容。如果发现有的标题对你的项目有影响，但是迁移工具没有给出提示，请检查自己的项目。&lt;/p&gt;

&lt;p&gt;3.如果你的项目有测试代码，运行并查看仍然失败的地方。如果没有测试代码，在浏览器中打开你的程序，通过导航环顾并留意那些报错或警告信息。&lt;/p&gt;

&lt;p&gt;4.现在，你的应用程序应该已彻底完成迁移。如果你渴望了解更多，可以阅读本页面剩余部分 - 或者从介绍部分，从头开始深入新的文档和改进过的指南。由于你已经熟悉一些核心概念，所以许多部分已经被删除掉。&lt;/p&gt;

</description>
        <pubDate>Thu, 16 Mar 2017 00:00:00 +0900</pubDate>
        <link>http://localhost:4000/2017-03-16/bolg-test/</link>
        <guid isPermaLink="true">http://localhost:4000/2017-03-16/bolg-test/</guid>
      </item>
    
  </channel>
</rss>
