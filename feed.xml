<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>岛主</title>
    <link>http://localhost:4000</link>
    <atom:link href="http://localhost:4000/feed.xml" rel="self" type="application/rss+xml" />
    
      <item>
        <title>国内优秀npm镜像推荐及使用</title>
        <description>&lt;p&gt;npm全称Node Package Manager，是node.js的模块依赖管理工具。由于npm的源在国外，所以国内用户使用起来各种不方便。下面整理出了一部分国内优秀的npm镜像资源，国内用户可以选择使用。&lt;/p&gt;

&lt;h2 id=&quot;国内优秀npm镜像&quot;&gt;国内优秀npm镜像&lt;/h2&gt;

&lt;h3 id=&quot;淘宝npm镜像&quot;&gt;淘宝npm镜像&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;搜索地址：http://npm.taobao.org/&lt;/li&gt;
  &lt;li&gt;registry地址：http://registry.npm.taobao.org/&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;cnpmjs镜像&quot;&gt;cnpmjs镜像&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;搜索地址：http://cnpmjs.org/&lt;/li&gt;
  &lt;li&gt;registry地址：http://r.cnpmjs.org/&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;如何使用&quot;&gt;如何使用&lt;/h2&gt;

&lt;p&gt;有很多方法来配置npm的registry地址，下面根据不同情境列出几种比较常用的方法。以淘宝npm镜像举例：&lt;/p&gt;

&lt;h3 id=&quot;1临时使用&quot;&gt;1.临时使用&lt;/h3&gt;

&lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nx&quot;&gt;npm&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;--&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;registry&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;https&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;//registry.npm.taobao.org install express&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;h3 id=&quot;2持久使用&quot;&gt;2.持久使用&lt;/h3&gt;

&lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nx&quot;&gt;npm&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;config&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;set&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;registry&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;https&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;//registry.npm.taobao.org&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// 配置后可通过下面方式来验证是否成功&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;npm&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;config&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;get&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;registry&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// 或&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;npm&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;info&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;express&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;3通过cnpm使用&quot;&gt;3.通过cnpm使用&lt;/h3&gt;

&lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nx&quot;&gt;npm&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;install&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;g&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;cnpm&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;--&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;registry&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;https&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;//registry.npm.taobao.org&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// 使用&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;cnpm&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;install&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;express&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

</description>
        <pubDate>Tue, 21 Mar 2017 00:00:00 +0800</pubDate>
        <link>http://localhost:4000/2017-03-21/bolg/</link>
        <guid isPermaLink="true">http://localhost:4000/2017-03-21/bolg/</guid>
      </item>
    
      <item>
        <title>常见javascript hack解释</title>
        <description>&lt;p&gt;一些javascript技巧被资深的程序员广泛使用。然而对于初学者来说，有的技巧的含义并不是那么的显而易见。这些技巧往往使用的并不是语言的直接含义，而是利用一些特性或者副作用来达到目的。下面我会对一些常用的技巧做出解释。&lt;/p&gt;

&lt;p&gt;你应该明白，这些技巧中的很多都属于hack，不应该在日常开发中使用。这篇文章的目的是解释这些hack是如何工作的，并不是推荐去使用它们。&lt;/p&gt;

&lt;h2 id=&quot;使用将值转换为布尔型&quot;&gt;使用!!将值转换为布尔型&lt;/h2&gt;

&lt;p&gt;在javascript中，所有的东西都能被转换成“真”或“假”。也就是说，当你把一个对象放进if语句的条件中，执行时，要么走条件为真的分支，要么就走条件为假的分支。&lt;/p&gt;

&lt;p&gt;0, false, “”, null, undefined, NaN为假，其他对象都为真。有时候想将一个对象转换成布尔值，你可以使用!!。&lt;/p&gt;

&lt;p&gt;另外，如果不是if (x == “test”)这种形式，你可以简单的写成if (x)，当x为false时，程序将直接运行其它块。&lt;/p&gt;

&lt;h2 id=&quot;使用str将字符串转换成数字&quot;&gt;使用+str将字符串转换成数字&lt;/h2&gt;

&lt;p&gt;在javascript中，当+作为一元运算符使用时会返回一个数值或NaN。有时当你想知道一个变量是否是数值(number)时，你可以这样来写代码x === +x(见underscorejs源码)。&lt;/p&gt;

&lt;p&gt;这种方法意图并不明显，通常，你应该使用parseFloat或者parseInt(x, 10)来将一个变量转换成数值型(number)。&lt;/p&gt;

&lt;h2 id=&quot;使用来提供默认值&quot;&gt;使用||来提供默认值&lt;/h2&gt;

&lt;table&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;在javascript中，&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;是一个短路求值的例子，也常用在其他语言当中。&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;操作符会首页判断左边表达式的值，如果为false，则继续判断右边。在任何情况下它都会返回第一个值不为false的结果，参考下面例子：&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;setAge&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;age&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;age&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;age&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;setAge();
我们没有传入age的值，因此age || 10会返回10，这是给变量设置默认值的非常好的一个方式。事实上这段代码等价于：&lt;/p&gt;

&lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;age&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
   &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;age&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;age&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
   &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;age&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;很明显，前者代码更简洁，这就是为什么到处都在使用它的原因。&lt;/p&gt;

&lt;p&gt;就我自己而言，我经常使用这种方式，因为足够的简洁明了。需要注意的是，这种方式你没法设置age为0，因为0是false，因此下面的方法应该是一个更好的方案(但是代码稍微有些冗长)：&lt;/p&gt;

&lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;age&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;typeof&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;age&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!==&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;undefined&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;?&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;age&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;使用void-0来替代undefined&quot;&gt;使用void 0来替代undefined&lt;/h2&gt;

&lt;p&gt;关键字void后跟着一个参数，并总会返回undefined。为什么不直接使用undefined？因为在一些浏览器中，undefined仅仅被视作一个变量，并且可以被重新赋值，而前者可以给我们更高的信赖。虽然你可以看到这种写法在很多代码或库中被使用，但是我并不建议经常使用它，因为所有遵循EC5的浏览器已经禁止重写undefined了。&lt;/p&gt;

&lt;h2 id=&quot;封装模式function-&quot;&gt;封装模式(function() {…})()&lt;/h2&gt;

&lt;p&gt;当你想要封装代码时，你可以用一个匿名函数包裹代码，然后立刻执行这个匿名函数。在javascript中，有两种作用域：全局作用域和局部(函数)作用域。你写的代码包括变量和函数声明，不论在任何位置，都会进入全局作用域。通常，你可以将代码封装在匿名函数的内部，而只向全局作用域暴露调用接口的方法名。这个模式使用起来也非常方便，请看以下代码：&lt;/p&gt;

&lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;div&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;/&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;divBy5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;div&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;nb&quot;&gt;window&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;divBy5&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;divBy5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;})()&lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// =&amp;gt; undefined&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;divBy5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// =&amp;gt; 2&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;本文中列出的这些hack中，这条确实是无害的，你应该在代码中使用它以防止代码的内部逻辑暴露在全局作用域中。&lt;/p&gt;

&lt;p&gt;总之，我想提醒的是，你写的任何代码都应该本着让其他人读起来简单易懂为原则。&lt;/p&gt;

&lt;table&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;一些文章中列出的问题，在ES6标准中已经通过优雅的方式进行了解决。例如，在未来你不需要使用age = age&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;10这种模式了，ES6提供的一种更好的方式来设置默认值：&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;age&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
   &lt;span class=&quot;p&quot;&gt;...&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;另一个例子是(function() {…})()这种模式，当现代浏览器支持ES6 modules之后，你可以使用模块化来代替。&lt;/p&gt;

</description>
        <pubDate>Tue, 14 Mar 2017 00:00:00 +0800</pubDate>
        <link>http://localhost:4000/2017-03-14/bolg/</link>
        <guid isPermaLink="true">http://localhost:4000/2017-03-14/bolg/</guid>
      </item>
    
  </channel>
</rss>
